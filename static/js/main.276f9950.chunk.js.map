{"version":3,"sources":["View/Graph/GraphComp.js","View/Graph/EditableNode.js","View/Graph/EmptyNode.js","View/Graph/GraphInitialize.js","View/Graph/Polygon.js","View/Graph/PolygonNode.js","View/Graph/ServiceNode.js","Interaction/Interaction.js","View/Stencil/Group/StencilGroup_base.js","View/Stencil/Group/StencilGroup_relation.js","View/Stencil/Group/StencilGroup_service.js","View/Stencil/StencilComp.js","GraphEditor.js","App.js","index.js"],"names":["GraphComp","graphRef","container","useRef","useEffect","current","Graph","width","height","background","color","interacting","nodeMovable","GraphContainer","ref","styled","div","EditableNode","onDelete","children","deleteRef","NodeContainer","onMouseEnter","style","display","onMouseLeave","DeleteBTN","onClick","icon","DeleteOutlined","Button","EmptyNode","deleteNode","this","position","x","y","size","shape","id","component","node","Empty","nodeSetting","attrs","body","stroke","strokeWidth","Polygon","fillColor","strokeColor","PolygonBox","viewBox","transform","d","fill","PolygonTitle","span","PolygonNode","title","emptyNode","ServiceNode","SNode","interaction","droppingNode","options","graph","getNodes","emptyBBox","getBBox","dropBBox","incomingEdge","getIncomingEdges","outgoingEdge","getOutgoingEdges","isIntersectWithRect","getChildCount","getData","group","newNode","addServiceNode","addParallelNode","setTarget","setSource","removeNode","oldNode","serviceNodeSetting","currNode","deleteServiceNode","addNode","polygonNodeSetting","deleteParalleleNode","serviceNode","newEmptyNode","polygonNode","StencilGroup_base","titles","groupName","Component","nodes","i","length","ReactShape","data","push","stencil","load","StencilGroup_relation","RelationNode","init","StencilGroup_service","StencilComp","stencilRef","Addon","Stencil","target","search","cell","keyword","indexOf","placeholder","notFoundText","collapsable","stencilGraphWidth","stencilGraphHeight","layoutOptions","columns","dx","dy","center","columnWidth","rowHeight","stencilGraphOptions","groups","name","graphHeight","validateNode","appendChild","StencilContainer","GraphEditor","usePortal","Portal","setPortalGraph","source","label","text","plusNode","edgeAttrs","line","sourceMarker","addEdge","on","translate","undefined","hide","GraphInitialize","DIV","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.276f9950.chunk.js","sourcesContent":["import { Graph } from \"@antv/x6\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function GraphComp({ graphRef }) {\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // create graph instance\r\n    graphRef.current = new Graph({\r\n      container: container.current,\r\n      // autoResize: true,\r\n      width: 800,\r\n      height: 500,\r\n      // grid: {\r\n      //   size: 10,\r\n      //   visible: true,\r\n      //   type: \"dot\",\r\n      //   args: {\r\n      //     color: \"grey\",  /*#a0a0a0*/\r\n      //     thickness: 1\r\n      //   }\r\n      // },\r\n      background: { color: '#F7FBFF' },\r\n      interacting: {\r\n        nodeMovable: false\r\n      },\r\n      // embedding: {\r\n      //   enabled: true\r\n      // }\r\n    });\r\n  }, []);\r\n\r\n  return <GraphContainer ref={container}></GraphContainer>;\r\n}\r\n\r\n//============ styled components ==============\r\nconst GraphContainer = styled.div`\r\n  border: 3px solid lightgrey;\r\n  border-radius: 10px;\r\n  box-shadow: 0 8px 5px rgba(0, 0, 0, 0.1);\r\n`;\r\n","import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function EditableNode({onDelete, children}) {\r\n  const deleteRef = useRef();\r\n\r\n  const onMouseEnter = () => {\r\n    // console.log(\"enter\");\r\n    deleteRef.current.style.display = \"block\";    \r\n  }\r\n  \r\n  const onMouseLeave = () => {\r\n    // console.log(\"leave\");\r\n    deleteRef.current.style.display = \"none\";\r\n  }\r\n\r\n  return (\r\n    <NodeContainer onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children}\r\n      <DeleteBTN onClick={onDelete} ref={deleteRef} icon={<DeleteOutlined />}/>\r\n    </NodeContainer>\r\n  );\r\n}\r\n\r\n//============ Styled Component ===============\r\nconst NodeContainer = styled.div`\r\n  // border: 3px dashed purple; \r\n  width: 100%; \r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst DeleteBTN = styled(Button)`\r\n  position: absolute;\r\n  right: 0%;\r\n  transform: translateX(15px);\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border-radius: 50%;\r\n  display: none;\r\n  transition: 100ms all ease-in-out;\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #1890FF;\r\n    border-color: #1890FF;\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport EditableNode from './EditableNode';\r\n\r\nexport default class EmptyNode {\r\n  constructor(deleteNode) {\r\n    this.width = 250;\r\n    this.height = 70;\r\n\r\n    if(deleteNode) {\r\n      // 居中\r\n      const {x, y} = deleteNode.position();\r\n      const {width} = deleteNode.size();\r\n      this.x = x + (width - this.width)/2;\r\n      this.y = y;\r\n    }\r\n    else {\r\n      this.x = 250;\r\n      this.y = 125;\r\n    }\r\n\r\n    this.shape = \"react-shape\";\r\n    this.id = \"empty\";\r\n    this.component = (node) => (\r\n      <EditableNode onDelete={() => {}}>\r\n        <Empty>请将左侧服务或关系拖入框内</Empty>\r\n      </EditableNode> \r\n    )\r\n  }\r\n}\r\n\r\n//=========== Styled Components ==========\r\nconst Empty = styled.div`\r\n  width: 80%;\r\n  height: 100%;\r\n  border: 2px dashed grey;\r\n  font-size: small;\r\n  color: grey;\r\n  padding: 1px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import EmptyNode from './EmptyNode';\r\n\r\n// setting of initial nodes(source, target, plusNode)\r\nconst nodeSetting = {\r\n  shape: \"circle\",\r\n  width: 50,\r\n  height: 50,\r\n  attrs: {\r\n    body: {\r\n      stroke: \"lightgrey\",\r\n      strokeWidth: 1\r\n    }\r\n  }\r\n};\r\n\r\nexport default function GraphInitialize(graph) {\r\n  const source = graph.addNode({\r\n    ...nodeSetting,\r\n    x: 350,\r\n    y: 30,\r\n    attrs: {\r\n      label: {\r\n        text: \"开始\"\r\n      }\r\n    }\r\n  });\r\n\r\n  const target = graph.addNode({\r\n    ...nodeSetting,\r\n    x: 350,\r\n    y: 140,\r\n    attrs: {\r\n      label: {\r\n        text: \"结束\"\r\n      }\r\n    }\r\n  });\r\n\r\n  const plusNode = graph.addNode({\r\n    ...nodeSetting,\r\n    id: \"plus\",\r\n    x: 367,\r\n    y: 80,\r\n    width: 13,\r\n    height: 13,\r\n    attrs: {\r\n      label: {\r\n        text: \"+\"\r\n      }\r\n    }\r\n  });\r\n\r\n//========================= Edges ===============================\r\n  const edgeAttrs = {\r\n    attrs: {\r\n      line: {\r\n        stroke: \"#1890FF\",\r\n        sourceMarker: \"circle\"\r\n        // size: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  graph.addEdge({\r\n    ...edgeAttrs,\r\n    source: plusNode,\r\n    target\r\n  });\r\n\r\n  graph.on(\"node:click\", ({ node }) => {\r\n    // click plus\r\n    if (node.id === \"plus\") {\r\n      // add emptyNode\r\n      const emptyNode = graph.addNode(new EmptyNode());\r\n      target.translate(undefined, 100);\r\n      // plus is invisible\r\n      plusNode.hide();\r\n      // add 上面edge\r\n      graph.addEdge({\r\n        ...edgeAttrs,\r\n        source,\r\n        target: emptyNode\r\n      });\r\n      // add 下面edge\r\n      graph.addEdge({\r\n        ...edgeAttrs,\r\n        source: emptyNode,\r\n        target\r\n      });\r\n    }\r\n  });\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default function Polygon({fillColor, strokeColor, strokeWidth, children}) {\r\n\treturn (\r\n\t\t<PolygonBox>\r\n\t\t\t<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 111 44\">\r\n\t\t\t\t<g transform=\"matrix(1,0,0,1,-386.202,-492.831)\">\r\n\t\t\t\t\t<g transform=\"matrix(1,0,0,1.07965,3.97193,-33.3985)\">\r\n\t\t\t\t\t\t<path d=\"M402.079,526.733L383.272,507.553L402.079,488.373L472.937,488.373L491.744,507.553L472.937,526.733L402.079,526.733Z\" style={{fill: fillColor, stroke:strokeColor, strokeWidth:strokeWidth}}/>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t\t<PolygonTitle>{children}</PolygonTitle>\r\n\t\t</PolygonBox>\r\n\t);\r\n}\r\n\r\n//========== Styled Components ==========\r\nconst PolygonBox = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst PolygonTitle = styled.span`\r\n\tposition: absolute;\r\n`;\r\n","import EditableNode from \"./EditableNode\";\r\nimport Polygon from \"./Polygon\";\r\n\r\nexport default class PolygonNode {\r\n\tconstructor(title, emptyNode, onDelete) {\r\n\t\tconst {x, y} = emptyNode.position();\r\n\t\tconst {width} = emptyNode.size();\r\n\r\n\t\tthis.shape = 'react-shape';\r\n\t\tthis.width = 210;\r\n\t\tthis.height = 50;\r\n\t\tthis.x = x + (width - this.width)/2;\r\n\t\tthis.y = y;\r\n\t\tthis.id = \"polygonNode\";\r\n\t\tthis.component = (node) => (\r\n\t\t\t<EditableNode onDelete={() => onDelete(node)}>\r\n\t\t\t\t<Polygon fillColor={\"none\"} strokeColor={\"#1890FF\"} strokeWidth={\"1px\"}>{title}</Polygon>\r\n\t\t\t</EditableNode>\r\n\t\t)\r\n\t}\r\n}","import styled from 'styled-components';\r\nimport EditableNode from './EditableNode';\r\n\r\nexport default class ServiceNode {\r\n  constructor(emptyNode, title, onDelete) {\r\n    const {x, y} = emptyNode.position();\r\n    const {width} = emptyNode.size();\r\n\r\n    this.shape = \"react-shape\";\r\n    this.width = 220;\r\n    this.height = 35;\r\n    this.x = x + (width - this.width)/2;\r\n    this.y = y;\r\n    this.id = \"serviceNode\";\r\n    this.component = (node) => (\r\n      <EditableNode onDelete={() => onDelete(node)}>\r\n        <SNode>{title}</SNode>\r\n      </EditableNode> \r\n    )\r\n }\r\n}\r\n\r\n//=========== Styled Components ==============\r\nconst SNode = styled.div`\r\n  width: 170px;\r\n  height: 35px;\r\n  background: white;\r\n  border: 1px solid #1890FF;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n`;","import EmptyNode from \"../View/Graph/EmptyNode\";\r\nimport PolygonNode from \"../View/Graph/PolygonNode\";\r\nimport ServiceNode from '../View/Graph/ServiceNode';\r\n\r\n\r\nclass Interaction {\r\n\tconstructor() {\r\n\t\t\r\n\t}\r\n\r\n\tvalidateNode(droppingNode, options, graph) {\r\n\t\tthis.graph = graph;\r\n\r\n\t\t// find empty node\r\n\t\tfor(let node of graph.getNodes()) {\r\n\t\t\tif(node.id === 'empty') {\r\n\t\t\t\tconst emptyBBox = node.getBBox();\r\n\t\t\t\tconst dropBBox = droppingNode.getBBox();\r\n\r\n\t\t\t\tconst incomingEdge = graph.getIncomingEdges(node)[0];\r\n\t\t\t\tconst outgoingEdge = graph.getOutgoingEdges(node)[0];\r\n\r\n\t\t\t\t// 判断交叉，有没有child\r\n\t\t\t\tif(dropBBox.isIntersectWithRect(emptyBBox) && node.getChildCount() === 0) {\r\n\t\t\t\t\t// get title and group of dropping node\r\n\t\t\t\t\tconst {title, group} = droppingNode.getData();\r\n\t\t\t\t\tlet newNode = null;\r\n\r\n\t\t\t\t\t// 判断 relation or service node\r\n\t\t\t\t\tif(group === \"service\") {\r\n\t\t\t\t\t\tnewNode = this.addServiceNode(node, title);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(group === \"relation\") {\r\n\t\t\t\t\t\tnewNode = this.addParallelNode(node, newNode);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// get in and out edge of empty node, then reconnect with new polygon node\r\n\t\t\t\t\tincomingEdge.setTarget(newNode, title, newNode);\r\n\t\t\t\t\toutgoingEdge.setSource(newNode, title, newNode);\r\n\r\n\t\t\t\t\t// remove empty node\r\n\t\t\t\t\tgraph.removeNode(node);\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddServiceNode(oldNode, title) {\r\n\t\tconst serviceNodeSetting = new ServiceNode(oldNode, title, \r\n\t\t\t(currNode) => this.deleteServiceNode(currNode));\r\n\t\t\t\t\t\t\r\n\t\t// add service node\r\n\t\treturn this.graph.addNode(serviceNodeSetting);\r\n\t}\r\n\r\n\taddParallelNode(oldNode) {\r\n\t\tconst polygonNodeSetting = new PolygonNode(\"并行开始\", oldNode, \r\n\t\t(currNode) => this.deleteParalleleNode(currNode));\r\n\r\n\t\t// add Polygon node\r\n\t\treturn this.graph.addNode(polygonNodeSetting);\r\n\t}\r\n\r\n\tdeleteServiceNode(serviceNode) {\r\n\t\t// add new emptyNode\r\n\t\tconst newEmptyNode = this.graph.addNode(new EmptyNode());\r\n\r\n\t\t// get in, out edges of service node, then reconnect with newEmptyNode\r\n\t\tthis.graph.getIncomingEdges(serviceNode)[0].setTarget(newEmptyNode);\r\n\t\tthis.graph.getOutgoingEdges(serviceNode)[0].setSource(newEmptyNode);\r\n\r\n\t\t// delete service node\r\n\t\tthis.graph.removeNode(serviceNode);\r\n\t}\r\n\r\n\tdeleteParalleleNode(polygonNode) {\r\n\t\t// add new emptyNode\r\n\t\tconst newEmptyNode = this.graph.addNode(new EmptyNode());\r\n\r\n\t\t// get in, out edges of polygon node, then reconnect with newEmptyNode\r\n\t\tthis.graph.getIncomingEdges(polygonNode)[0].setTarget(newEmptyNode);\r\n\t\tthis.graph.getOutgoingEdges(polygonNode)[0].setSource(newEmptyNode);\r\n\r\n\t\t// delete polygon node\r\n\t\tthis.graph.removeNode(polygonNode);\r\n\t}\r\n}\r\n\r\nconst interaction = new Interaction();\r\nexport default interaction;","import { ReactShape } from \"@antv/x6-react-shape\";\r\n\r\nexport default class StencilGroup_base {\r\n  constructor() {\r\n    this.titles = [];\r\n    this.groupName = \"\";\r\n    this.Component = <></>;\r\n  }\r\n\r\n  // create different nodes by title\r\n  init(group) {\r\n    this.nodes = [];\r\n    for (let i = 0; i < this.titles.length; i++) {\r\n      const title = this.titles[i];\r\n      const node = new ReactShape({\r\n        width: 170,\r\n        height: 35,\r\n        data: {title, group},\r\n        shape: \"react-shape\", //*  !!!!  *//\r\n        component: <this.Component>{title}</this.Component>\r\n      });\r\n      this.nodes.push(node);\r\n    }\r\n  }\r\n\r\n  // 模板节点添加到指定的群组中\r\n  load(stencil) {\r\n    stencil.load(this.nodes, this.groupName);\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport StencilGroup_base from \"./StencilGroup_base\";\r\n\r\nexport default class StencilGroup_relation extends StencilGroup_base {\r\n  constructor() {\r\n    super();\r\n    this.titles = [\"并行节点\", \"条件节点\"];\r\n    this.groupName = \"关系节点\";\r\n    this.Component = RelationNode;\r\n    this.init(\"relation\");\r\n  }\r\n}\r\n\r\n//========= Styled Component ============\r\nconst RelationNode = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border: 2px dashed lightgrey;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport StencilGroup_base from \"./StencilGroup_base\";\r\n\r\nexport default class StencilGroup_service extends StencilGroup_base {\r\n  constructor() {\r\n    super();\r\n    this.titles = [\r\n      \"人脸相关能力\",\r\n      \"text_lang\",\r\n      \"文本校对\",\r\n      \"IFOCR\",\r\n      \"测试自定义用例\"\r\n    ];\r\n    this.groupName = \"讯飞服务\";\r\n    this.Component = ServiceNode;\r\n    this.init(\"service\");\r\n  }\r\n}\r\n\r\n//========= Styled Component ===========\r\nconst ServiceNode = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border: 1px solid lightgrey;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n`;\r\n","import { Addon } from \"@antv/x6\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport interaction from \"../../Interaction/Interaction\";\r\n\r\nimport StencilGroup_relation from \"./Group/StencilGroup_relation\";\r\nimport StencilGroup_service from \"./Group/StencilGroup_service\";\r\n\r\nexport default function StencilComp({ graphRef, stencilRef }) {\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if(!graphRef.current) {\r\n      return;\r\n    }\r\n    // create stencil instance\r\n    const stencil = new Addon.Stencil({\r\n      title: \"Components\",\r\n      target: graphRef.current,\r\n      search(cell, keyword) {\r\n        return cell.shape.indexOf(keyword) !== -1;\r\n      },\r\n      placeholder: \"全部服务/节点\",\r\n      notFoundText: \"Not Found\",\r\n      collapsable: true,\r\n      stencilGraphWidth: 230,\r\n      stencilGraphHeight: 100,\r\n      layoutOptions: {\r\n        columns: 1,\r\n        dx: 0,\r\n        dy: 0,\r\n        center: true,\r\n        columnWidth: 200,\r\n        rowHeight: 50,\r\n\r\n      },\r\n      stencilGraphOptions: {\r\n        background: {color: '#ffffff',}\r\n      },\r\n      groups: [\r\n        {\r\n          name: \"关系节点\",\r\n          title: \"关系节点\"\r\n        },\r\n        {\r\n          name: \"讯飞服务\",\r\n          title: \"讯飞服务\",\r\n          graphHeight: 300\r\n        }\r\n      ],\r\n      validateNode: (droppingNode, options) => interaction.validateNode(droppingNode, options, graphRef.current)\r\n    });\r\n\r\n    stencilRef.current = stencil;\r\n    container.current.appendChild(stencil.container);\r\n\r\n    // add service, relation group to stencil\r\n    const serviceGroup = new StencilGroup_service();\r\n    serviceGroup.load(stencil);\r\n\r\n    const relationGroup = new StencilGroup_relation();\r\n    relationGroup.load(stencil);\r\n  }, []);\r\n\r\n  return <StencilContainer ref={container}></StencilContainer>;\r\n}\r\n\r\n//============ styled components ==============\r\nconst StencilContainer = styled.div`\r\n  width: 230px;\r\n  border: 1px solid #f0f0f0;\r\n  position: relative; /* !!! */\r\n`;\r\n","import { usePortal } from \"@antv/x6-react-shape\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport GraphComp from \"./View/Graph/GraphComp\";\r\nimport GraphInitialize from \"./View/Graph/GraphInitialize\";\r\nimport StencilComp from \"./View/Stencil/StencilComp\";\r\n\r\nconst GRAPH_1 = \"GRAPH_1\";\r\n\r\nexport default function GraphEditor() {\r\n  const [Portal, setPortalGraph] = usePortal(GRAPH_1);\r\n  const graphRef = useRef(null);\r\n  const stencilRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    GraphInitialize(graphRef.current);\r\n    setPortalGraph(graphRef.current);\r\n  }, [Portal]);\r\n\r\n  return (\r\n    <DIV>\r\n      <GlobalStyle />\r\n      <GraphComp graphRef={graphRef} />\r\n      <StencilComp graphRef={graphRef} stencilRef={stencilRef} />\r\n    </DIV>\r\n  );\r\n}\r\n\r\n//============ styled components ==============\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst DIV = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row-reverse;\r\n  width: 100%;\r\n`;\r\n","import GraphEditor from \"./GraphEditor\";\r\n\r\nexport default function App() {\r\n  return <GraphEditor />\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}