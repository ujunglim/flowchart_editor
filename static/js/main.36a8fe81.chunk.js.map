{"version":3,"sources":["View/Graph/GraphComp.js","View/Graph/EmptyComp.js","View/Graph/EmptyNode.js","View/Graph/GraphInitialize.js","View/Stencil/Group/StencilGroup_Base.js","View/Stencil/Group/StencilGroup_Relation.js","View/Stencil/Group/StencilGroup_Service.js","View/Stencil/StencilComp.js","GraphEditor.js","App.js","index.js"],"names":["GraphComp","graphRef","container","useRef","useEffect","current","Graph","width","height","background","color","interacting","nodeMovable","GraphContainer","ref","styled","div","EmptyComp","onDelete","emptyRef","deleteRef","addEventListener","style","border","Empty","EmptyText","onMouseEnter","display","onMouseLeave","DeleteBTN","onClick","icon","DeleteOutlined","Button","EmptyNode","this","shape","x","y","id","component","nodeSetting","attrs","body","stroke","strokeWidth","StencilGroup_Base","titles","groupName","Component","nodes","i","length","title","node","ReactShape","push","stencil","load","StencilGroup_Relation","RelationNode","init","StencilGroup_Service","ServiceNode","StencilComp","stencilRef","Addon","Stencil","target","search","cell","keyword","indexOf","placeholder","notFoundText","collapsable","stencilGraphWidth","stencilGraphHeight","layoutOptions","columns","dx","dy","center","columnWidth","rowHeight","groups","name","graphHeight","validateNode","droppingNode","options","graph","getNodes","dropBBox","getBBox","emptyBBox","isIntersectWithRect","position","emptyX","emptyY","emptyW","size","dropW","addChild","fit","fitEvent","Event","dispatchEvent","appendChild","StencilContainer","GraphEditor","usePortal","Portal","setPortalGraph","source","addNode","label","text","plusNode","edgeAttrs","line","sourceMarker","addEdge","console","log","on","emptyNode","translate","undefined","hide","GraphInitialize","DIV","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36a8fe81.chunk.js","sourcesContent":["import { Graph } from \"@antv/x6\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function GraphComp({ graphRef }) {\r\n  // create graph instance\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    graphRef.current = new Graph({\r\n      container: container.current,\r\n      // autoResize: true,\r\n      width: 800,\r\n      height: 500,\r\n      // grid: {\r\n      //   size: 10,\r\n      //   visible: true,\r\n      //   type: \"dot\",\r\n      //   args: {\r\n      //     color: \"grey\",  /*#a0a0a0*/\r\n      //     thickness: 1\r\n      //   }\r\n      // },\r\n      background: { color: '#F7FBFF' },\r\n      interacting: {\r\n        nodeMovable: false\r\n      },\r\n      // embedding: {\r\n      //   enabled: true\r\n      // }\r\n    });\r\n  }, []);\r\n\r\n  return <GraphContainer ref={container}></GraphContainer>;\r\n}\r\n\r\n//============ styled components ==============\r\nconst GraphContainer = styled.div`\r\n  border: 3px solid lightgrey;\r\n  border-radius: 10px;\r\n  box-shadow: 0 8px 5px rgba(0, 0, 0, 0.1);\r\n`;\r\n","import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function EmptyComp({onDelete}) {\r\n  const emptyRef = useRef();\r\n  const deleteRef = useRef();\r\n\r\n  useEffect(() => {\r\n    emptyRef.current.addEventListener('fit', () => {\r\n      emptyRef.current.style.border = \"none\"\r\n    })\r\n  }, []);\r\n\r\n  const onMouseEnter = () => {\r\n    // console.log(\"enter\");\r\n    deleteRef.current.style.display = \"inline\";    \r\n  }\r\n  \r\n  const onMouseLeave = () => {\r\n    // console.log(\"leave\");\r\n    deleteRef.current.style.display = \"none\";    \r\n  }\r\n\r\n  return (\r\n    <Empty ref={emptyRef}> \r\n      <EmptyText onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n        请将左侧服务或关系拖入框内\r\n        <DeleteBTN onClick={onDelete} ref={deleteRef} icon={<DeleteOutlined />}/>\r\n      </EmptyText>\r\n    </Empty>\r\n  );\r\n}\r\n\r\n//============ Styled Component ===============\r\nconst Empty = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 2px dashed grey;\r\n  font-size: small;\r\n  color: grey;\r\n`;\r\n\r\nconst EmptyText = styled.div`\r\n  /* border: 3px dashed purple; */\r\n  width: 130%; \r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  transform: translateX(-13%);\r\n`;\r\n\r\nconst DeleteBTN = styled(Button)`\r\n  position: absolute;\r\n  right: 0%;\r\n  transform: translateX(15px);\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border-radius: 50%;\r\n  display: none;\r\n  transition: 100ms all ease-in-out;\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #1890FF;\r\n    border-color: #1890FF;\r\n  }\r\n`;","import EmptyComp from './EmptyComp';\r\n\r\n\r\nexport default class EmptyNode {\r\n  constructor(onDelete) {\r\n    this.shape = \"react-shape\";\r\n    this.x = 275;\r\n    this.y = 125;\r\n    this.width = 200;\r\n    this.height = 70;\r\n    this.id = \"empty\";\r\n    this.component = <EmptyComp onDelete={onDelete}/>;\r\n  }\r\n}","import EmptyNode from './EmptyNode';\r\n\r\n// setting of initial nodes(开始，结束，+)\r\nconst nodeSetting = {\r\n  shape: \"circle\",\r\n  width: 50,\r\n  height: 50,\r\n  attrs: {\r\n    body: {\r\n      stroke: \"lightgrey\",\r\n      strokeWidth: 1\r\n    }\r\n  }\r\n};\r\n\r\nexport default function GraphInitialize(graph) {\r\n  // const bounds = useRef([]);\r\n\r\n  const source = graph.addNode({\r\n    ...nodeSetting,\r\n    x: 350,\r\n    y: 30,\r\n    attrs: {\r\n      label: {\r\n        text: \"开始\"\r\n      }\r\n    }\r\n  });\r\n\r\n  const target = graph.addNode({\r\n    ...nodeSetting,\r\n    x: 350,\r\n    y: 140,\r\n    attrs: {\r\n      label: {\r\n        text: \"结束\"\r\n      }\r\n    }\r\n  });\r\n\r\n  const plusNode = graph.addNode({\r\n    ...nodeSetting,\r\n    id: \"plus\",\r\n    x: 367,\r\n    y: 80,\r\n    width: 13,\r\n    height: 13,\r\n    attrs: {\r\n      label: {\r\n        text: \"+\"\r\n      }\r\n    }\r\n  });\r\n\r\n//========================= Edges ===============================\r\n  const edgeAttrs = {\r\n    attrs: {\r\n      line: {\r\n        stroke: \"#1890FF\",\r\n        sourceMarker: \"circle\"\r\n        // size: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  graph.addEdge({\r\n    ...edgeAttrs,\r\n    source: plusNode,\r\n    target\r\n  });\r\n\r\n  // delete empty node\r\n  const onDelete = () => {\r\n    console.log(\"delete empty node\");\r\n  }\r\n\r\n  graph.on(\"node:click\", ({ node }) => {\r\n    // click plus\r\n    if (node.id === \"plus\") {\r\n      // add emptyNode\r\n      const emptyNode = graph.addNode(new EmptyNode(onDelete));\r\n      target.translate(undefined, 100);\r\n      // plus is invisible\r\n      plusNode.hide();\r\n      // add 上面edge\r\n      graph.addEdge({\r\n        ...edgeAttrs,\r\n        source,\r\n        target: emptyNode\r\n      });\r\n      // add 下面edge\r\n      graph.addEdge({\r\n        ...edgeAttrs,\r\n        source: emptyNode,\r\n        target\r\n      });\r\n    }\r\n    else if(node.id === \"delete\") {\r\n      console.log(\"clicked delete\");\r\n    }\r\n  });\r\n}\r\n","import { ReactShape } from \"@antv/x6-react-shape\";\r\n\r\nexport default class StencilGroup_Base {\r\n  constructor() {\r\n    this.titles = [];\r\n    this.groupName = \"\";\r\n    this.Component = <></>;\r\n  }\r\n\r\n  init() {\r\n    this.nodes = [];\r\n    for (let i = 0; i < this.titles.length; i++) {\r\n      const title = this.titles[i];\r\n      const node = new ReactShape({\r\n        width: 170,\r\n        height: 35,\r\n        shape: \"react-shape\", //*  !!!!  *//\r\n        component: <this.Component>{title}</this.Component>\r\n      });\r\n      this.nodes.push(node);\r\n    }\r\n  }\r\n\r\n  load(stencil) {\r\n    stencil.load(this.nodes, this.groupName);\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport StencilGroup_Base from \"./StencilGroup_Base\";\r\n\r\nexport default class StencilGroup_Relation extends StencilGroup_Base {\r\n  constructor() {\r\n    super();\r\n    this.titles = [\"并行节点\", \"条件节点\"];\r\n    this.groupName = \"关系节点\";\r\n    this.Component = RelationNode;\r\n    this.init();\r\n  }\r\n}\r\n\r\n//========= Styled Component ============\r\nconst RelationNode = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border: 2px dashed lightgrey;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport StencilGroup_Base from \"./StencilGroup_Base\";\r\n\r\nexport default class StencilGroup_Service extends StencilGroup_Base {\r\n  constructor() {\r\n    super();\r\n    this.titles = [\r\n      \"人脸相关能力\",\r\n      \"text_lang\",\r\n      \"文本校对\",\r\n      \"IFOCR\",\r\n      \"测试自定义用例\"\r\n    ];\r\n    this.groupName = \"讯飞服务\";\r\n    this.Component = ServiceNode;\r\n    this.init();\r\n  }\r\n}\r\n\r\n//========= Styled Component ===========\r\nconst ServiceNode = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border: 1px solid lightgrey;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n`;\r\n","import { Addon } from \"@antv/x6\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport StencilGroup_Relation from \"./Group/StencilGroup_Relation\";\r\nimport StencilGroup_Service from \"./Group/StencilGroup_Service\";\r\n\r\nexport default function StencilComp({ graphRef, stencilRef }) {\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!graphRef.current) {\r\n      return;\r\n    }\r\n    // create stencil instance\r\n    const stencil = new Addon.Stencil({\r\n      title: \"Components\",\r\n      target: graphRef.current,\r\n      search(cell, keyword) {\r\n        return cell.shape.indexOf(keyword) !== -1;\r\n      },\r\n      placeholder: \"全部服务/节点\",\r\n      notFoundText: \"Not Found\",\r\n      collapsable: true,\r\n      stencilGraphWidth: 200,\r\n      stencilGraphHeight: 100,\r\n      layoutOptions: {\r\n        columns: 1,\r\n        dx: 0,\r\n        dy: 0,\r\n        center: true,\r\n        columnWidth: 200,\r\n        rowHeight: 50\r\n      },\r\n      groups: [\r\n        {\r\n          name: \"关系节点\",\r\n          title: \"关系节点\"\r\n        },\r\n        {\r\n          name: \"讯飞服务\",\r\n          title: \"讯飞服务\",\r\n          graphHeight: 300\r\n        }\r\n      ],\r\n      validateNode(droppingNode, options) {\r\n        const graph = graphRef.current\r\n        for( let node of graph.getNodes()) {\r\n          if(node.id === 'empty'){\r\n            const dropBBox = droppingNode.getBBox();\r\n            const emptyBBox = node.getBBox();\r\n\r\n            if(dropBBox.isIntersectWithRect(emptyBBox)){\r\n              // 剧中\r\n              const {x: emptyX, y: emptyY} = node.position();\r\n              const {width: emptyW} = node.size();\r\n              const {width: dropW} = droppingNode.size();\r\n              droppingNode.position(emptyX + (emptyW - dropW)/2, emptyY);\r\n\r\n              //绑定 父子\r\n              node.addChild(droppingNode);  // trigger change:children\r\n              \r\n              // empty Node 跟 dropping Node一样大小\r\n              node.fit();\r\n              const fitEvent = new Event('fit');\r\n              dispatchEvent(fitEvent);\r\n              \r\n              return true;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n    });\r\n    stencilRef.current = stencil;\r\n    container.current.appendChild(stencil.container);\r\n\r\n    const serviceGroup = new StencilGroup_Service();\r\n    serviceGroup.load(stencil);\r\n\r\n    const relationGroup = new StencilGroup_Relation();\r\n    relationGroup.load(stencil);\r\n  }, []);\r\n\r\n  return <StencilContainer ref={container}></StencilContainer>;\r\n}\r\n\r\n//============ styled components ==============\r\nconst StencilContainer = styled.div`\r\n  width: 200px;\r\n  border: 1px solid #f0f0f0;\r\n  position: relative; /* !!! */\r\n`;\r\n","import { usePortal } from \"@antv/x6-react-shape\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GraphComp from \"./View/Graph/GraphComp\";\r\nimport GraphInitialize from \"./View/Graph/GraphInitialize\";\r\nimport StencilComp from \"./View/Stencil/StencilComp\";\r\n\r\nconst GRAPH_1 = \"GRAPH_1\";\r\n\r\nexport default function GraphEditor() {\r\n  const [Portal, setPortalGraph] = usePortal(GRAPH_1);\r\n  // const bound = useRef([]);\r\n  const graphRef = useRef(null);\r\n  const stencilRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // set bound node array\r\n    GraphInitialize(graphRef.current);\r\n\r\n    // bound.current = boundNodeArr;\r\n\r\n    setPortalGraph(graphRef.current);\r\n  }, [Portal]);\r\n\r\n  return (\r\n    <DIV>\r\n      <GraphComp graphRef={graphRef} />\r\n      <StencilComp graphRef={graphRef} stencilRef={stencilRef} />\r\n    </DIV>\r\n  );\r\n}\r\n\r\n//============ styled components ==============\r\nconst DIV = styled.div`\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  width: 100%;\r\n`;\r\n","import GraphEditor from \"./GraphEditor\";\n\nexport default function App() {\n  return <GraphEditor />\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}