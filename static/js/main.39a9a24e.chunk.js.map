{"version":3,"sources":["View/Graph/GraphComp.js","View/Graph/EditableNode.js","View/Graph/EmptyNode.js","View/Graph/GraphInitialize.js","Redux/reducer.js","View/Inspector/Inspector.js","View/Graph/Polygon.js","View/Graph/PolygonNode.js","View/Graph/ServiceNode.js","Interaction/Interaction.js","View/Stencil/Group/StencilGroup_base.js","View/Stencil/Group/StencilGroup_relation.js","View/Stencil/Group/StencilGroup_service.js","View/Stencil/StencilComp.js","GraphEditor.js","App.js","index.js"],"names":["GraphComp","graphRef","container","useRef","useEffect","current","Graph","width","height","background","color","interacting","nodeMovable","scroller","enabled","GraphContainer","ref","styled","div","EditableNode","onDelete","children","deleteRef","NodeContainer","onMouseEnter","style","display","onMouseLeave","DeleteBTN","onClick","icon","DeleteOutlined","Button","EmptyNode","this","x","y","shape","id","component","node","Empty","EmptyParallelNode","nodeSetting","attrs","body","stroke","strokeWidth","initialState","routeNum","setRelation","plus","createAction","minus","reset","store","createStore","state","action","type","payload","SubMenu","Menu","connect","ownProps","props","useState","getState","InspectorDIV","Header","defaultOpenKeys","mode","title","DownOutlined","Item","min","defaultValue","onChange","value","dispatch","Form","Polygon","fillColor","strokeColor","PolygonBox","viewBox","transform","d","fill","PolygonTitle","span","PolygonStartNode","emptyNode","position","size","PolygonFinishNode","ServiceNode","SNode","confirm","Modal","interaction","containerNode","droppingNode","options","graph","getNodes","emptyBBox","getBBox","isIntersectWithRect","getChildCount","getData","group","addServiceNode","addParallelNode","removeNode","includes","alert","oldNode","serviceNodeSetting","currNode","ExclamationCircleOutlined","content","onOk","deleteServiceNode","onCancel","serviceNode","addNode","incomingEdge","getIncomingEdges","outgoingEdge","getOutgoingEdges","setTarget","setSource","trigger","startInstance","startNode","deleteParalleleNode","finishNode","finishInstance","parallelNodes","parallelUpEdges","parallelDownEdges","edgeSetting","router","line","sourceMarker","i","push","addEdge","source","target","vertices","addChild","subscribe","index","translate","undefined","up_x","getVertices","down_x","setVertices","pop","slice","on","newEmptyNode","StencilGroup_base","titles","groupName","Component","nodes","length","ReactShape","data","stencil","load","StencilGroup_relation","relations","RelationNode","init","StencilGroup_service","services","StencilComp","stencilRef","Addon","Stencil","search","cell","keyword","indexOf","placeholder","notFoundText","collapsable","stencilGraphWidth","stencilGraphHeight","layoutOptions","columns","dx","dy","center","columnWidth","rowHeight","stencilGraphOptions","groups","name","graphHeight","validateNode","appendChild","StencilContainer","GraphEditor","usePortal","Portal","setPortalGraph","label","text","plusNode","edgeAttrs","hide","GraphInitialize","DIV","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39a9a24e.chunk.js","sourcesContent":["import { Graph } from \"@antv/x6\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function GraphComp({ graphRef }) {\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // create graph instance\r\n    graphRef.current = new Graph({\r\n      container: container.current,\r\n      // autoResize: true,\r\n      width: 800,\r\n      height: 700,\r\n      // grid: {visible: true},\r\n      background: { color: '#F7FBFF' },\r\n      interacting: {\r\n        nodeMovable: false\r\n      },\r\n      scroller: {\r\n        enabled: true,\r\n        // pageVisible: true,\r\n        // pageBreak: true,\r\n      },\r\n      // embedding: {\r\n      //   enabled: true\r\n      // }\r\n    });\r\n  }, []);\r\n\r\n  return <GraphContainer ref={container}></GraphContainer>;\r\n}\r\n\r\n//============ styled components ==============\r\nconst GraphContainer = styled.div`\r\n  // border: 1px solid lightgrey;\r\n  // border-right: none;\r\n`;","import { DeleteOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function EditableNode({onDelete, children}) {\r\n  const deleteRef = useRef();\r\n\r\n  const onMouseEnter = () => {\r\n    // console.log(\"enter\");\r\n    deleteRef.current.style.display = \"block\";    \r\n  }\r\n  \r\n  const onMouseLeave = () => {\r\n    // console.log(\"leave\");\r\n    deleteRef.current.style.display = \"none\";\r\n  }\r\n\r\n  return (\r\n    <NodeContainer onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n      {children}\r\n      <DeleteBTN onClick={onDelete} ref={deleteRef} icon={<DeleteOutlined />}/>\r\n    </NodeContainer>\r\n  );\r\n}\r\n\r\n//============ Styled Component ===============\r\nconst NodeContainer = styled.div`\r\n  // border: 3px dashed purple; \r\n  width: 100%; \r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst DeleteBTN = styled(Button)`\r\n  position: absolute;\r\n  right: 0%;\r\n  transform: translateX(15px);\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border-radius: 50%;\r\n  display: none;\r\n  transition: 100ms all ease-in-out;\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #1890FF;\r\n    border-color: #1890FF;\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport EditableNode from './EditableNode';\r\n\r\nexport class EmptyNode {\r\n  constructor() {\r\n    this.width = 250;\r\n    this.height = 70;\r\n    this.x = 250;\r\n    this.y = 125;\r\n    this.shape = \"react-shape\";\r\n    this.id = \"empty\";\r\n    this.component = (node) => (\r\n      <EditableNode onDelete={() => {}}>\r\n        <Empty>请将左侧服务或关系拖入框内</Empty>\r\n      </EditableNode> \r\n    )\r\n  }\r\n}\r\n\r\nexport class EmptyParallelNode {\r\n  constructor(x, id) {\r\n    this.width = 250;\r\n    this.height = 70;\r\n    this.x = x;\r\n    this.y = 250;\r\n    this.shape = \"react-shape\";\r\n    this.id = id;\r\n    this.component = (node) => (\r\n      <EditableNode>\r\n        <Empty>请将左侧服务拖入框内</Empty>\r\n      </EditableNode> \r\n    )\r\n  }\r\n}\r\n\r\n//=========== Styled Components ==========\r\nconst Empty = styled.div`\r\n  width: 80%;\r\n  height: 100%;\r\n  border: 2px dashed grey;\r\n  font-size: small;\r\n  color: grey;\r\n  padding: 1px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import { EmptyNode } from './EmptyNode';\r\n\r\n// setting of initial nodes(source, target, plusNode)\r\nconst nodeSetting = {\r\n  shape: \"circle\",\r\n  width: 50,\r\n  height: 50,\r\n  attrs: {\r\n    body: {\r\n      stroke: \"lightgrey\",\r\n      strokeWidth: 1\r\n    }\r\n  }\r\n};\r\n\r\nexport default function GraphInitialize(graph) {\r\n  const source = graph.addNode({\r\n    ...nodeSetting,\r\n    x: 350,\r\n    y: 30,\r\n    id: 'source',\r\n    attrs: {\r\n      label: {\r\n        text: \"开始\"\r\n      }\r\n    }\r\n  });\r\n\r\n  const target = graph.addNode({\r\n    ...nodeSetting,\r\n    x: 350,\r\n    y: 140,\r\n    id: 'target',\r\n    attrs: {\r\n      label: {\r\n        text: \"结束\"\r\n      }\r\n    }\r\n  });\r\n\r\n  // listener of add parallel node event \r\n  graph.on(\"AddParallel\", () => {\r\n    target.translate(undefined, 250);\r\n  })\r\n\r\n  // listener of delete parallel node event \r\n  graph.on(\"DeleteParallel\", () => {\r\n    target.translate(undefined, -250);\r\n  })\r\n\r\n  const plusNode = graph.addNode({\r\n    ...nodeSetting,\r\n    id: \"plus\",\r\n    x: 367,\r\n    y: 80,\r\n    width: 13,\r\n    height: 13,\r\n    attrs: {\r\n      label: {\r\n        text: \"+\"\r\n      }\r\n    }\r\n  });\r\n\r\n//========================= Edges ===============================\r\n  const edgeAttrs = {\r\n    attrs: {\r\n      line: {\r\n        stroke: \"#1890FF\",\r\n        sourceMarker: \"circle\"\r\n        // size: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  graph.addEdge({\r\n    ...edgeAttrs,\r\n    id: 'edge_init',\r\n    source: plusNode,\r\n    target\r\n  });\r\n\r\n  graph.on(\"node:click\", ({ node }) => {\r\n    // click plus\r\n    if (node.id === \"plus\") {\r\n      // remove edge_init\r\n      graph.removeNode('edge_init');\r\n      \r\n      // add emptyNode\r\n      const emptyNode = graph.addNode(new EmptyNode());\r\n      target.translate(undefined, 100);\r\n\r\n      // plus is invisible\r\n      plusNode.hide();\r\n      // add 上面edge\r\n      graph.addEdge({\r\n        ...edgeAttrs,\r\n        id: 'upEdge_init',\r\n        source,\r\n        target: emptyNode\r\n      });\r\n      \r\n      // add 下面edge\r\n      graph.addEdge({\r\n        ...edgeAttrs,\r\n        id: 'downEdge_init',\r\n        source: emptyNode,\r\n        target\r\n      });\r\n    }\r\n  });\r\n}\r\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n\trouteNum: 2,\r\n\tsetRelation: false\r\n};\r\n\r\n// Action creators\r\nconst plus = createAction(\"PLUS\");\r\nconst minus = createAction(\"MINUS\");\r\nconst reset = createAction(\"RESET\");\r\nconst setRelation = createAction(\"SET_RELATION\");\r\n\r\n// reducer\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase plus.type:\r\n\t\t\t// console.log('+');\r\n\t\t\treturn {routeNum: state.routeNum + 1, action: \"plus\", setRelation: true}\r\n\t\tcase minus.type:\r\n\t\t\t// console.log('-')\r\n\t\t\treturn {routeNum: state.routeNum - 1, action: \"minus\", setRelation: true}\r\n\t\tcase reset.type:\r\n\t\t\treturn {routeNum: 2, action: 'reset'}\r\n\t\tcase setRelation.type:\r\n\t\t\treturn {routeNum: state.routeNum, setRelation: action.payload}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\n// // reducer with builder callback object notation\r\n// const reducer = createReducer(initialState, (builder) => {\r\n// \tbuilder\r\n// \t\t.addCase(plus, (state, action) => {\r\n// \t\t\tstate.routeNum++;\r\n// \t\t\tstate.action = \"plus\";\r\n// \t\t\tstate.setRelation = true;\r\n// \t\t})\r\n// \t\t.addCase(minus, (state, action) => {\r\n// \t\t\tstate.routeNum--;\r\n// \t\t\tstate.action = \"minus\";\r\n// \t\t\tstate.setRelation = true;\r\n// \t\t})\r\n// \t\t.addCase(setRelation, (state, {payload}) => {\r\n// \t\t\tstate.setRelation = payload;\r\n// \t\t})\r\n// })\r\n\r\n\r\n// // reducer with map object notation\r\n// const reducer = createReducer(initialState, {\r\n// \t[plus]: (state, action) => {\r\n// \t\tstate.routeNum++;\r\n// \t\tstate.action = \"plus\";\r\n// \t\tstate.setRelation = true;\r\n// \t},\r\n// \t[minus]: (state, action) => {\r\n// \t\tstate.routeNum--;\r\n// \t\tstate.action = \"minus\";\r\n// \t\tstate.setRelation = true;\r\n// \t},\r\n// \t[setRelation] : (state, {payload}) => {\r\n// \t\tstate.setRelation = payload;\r\n// \t}\r\n// })\r\n\r\n// create store\r\nconst store = createStore(reducer);\r\nexport default store;","import { Form, Input, InputNumber, Menu, Radio } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport \"antd/dist/antd.css\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../../Redux/reducer\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction Inspector(props) {\r\n\tconst [radioValue, setRadioValue] = useState(\"合并通行(JoinAll)\");\r\n\tconst plainOptions = [\"合并通行(JoinAll)\", \"最快通行(JoinOne)\"];\r\n\r\n\t// console.log(props.state)\r\n\r\n\tconst onChangeRadio = (evt) => {\r\n\t\tsetRadioValue(evt.target.value);\r\n\t}\r\n\r\n\tlet routeNum = store.getState().routeNum;\r\n\r\n\tconst onChangeInput = (value) => {\r\n\t\t// compare previous routeNum, current routeNum\r\n\t\tif(routeNum < value) {\r\n\t\t\tstore.dispatch({type: \"PLUS\"});\r\n\t\t}\r\n\t\telse if(routeNum > value) {\r\n\t\t\tstore.dispatch({type: \"MINUS\"});\r\n\t\t}\r\n\t\trouteNum = value;\r\n\t}\r\n\r\n\tconst {setRelation} = store.getState();\r\n\r\n\treturn(\r\n\t\t<InspectorDIV>\r\n\t\t\t{setRelation && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header>关系配置</Header>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\tdefaultOpenKeys={['sub_pass','sub_route']}\r\n\t\t\t\t\t\tmode=\"inline\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* <FORM initialValues={{\"nodeName\": \"并行节点1\"}}>\r\n\t\t\t\t\t\t\t<Form.Item label=\"节点名称\" name=\"nodeName\">\r\n\t\t\t\t\t\t\t\t<Input placeholder=\"请填写节点名称\"></Input>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</FORM>\r\n\r\n\t\t\t\t\t\t<SubMenu key=\"sub_pass\" title=\"通行\" icon={<DownOutlined />}>\r\n\t\t\t\t\t\t\t<FORM>\r\n\t\t\t\t\t\t\t\t<Form.Item label=\"通行方式\">\r\n\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\toptions={plainOptions}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeRadio}\r\n\t\t\t\t\t\t\t\t\t\tvalue={radioValue}\r\n\t\t\t\t\t\t\t\t\t\toptionType=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tbuttonStyle=\"solid\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</FORM>\r\n\t\t\t\t\t\t</SubMenu> */}\r\n\r\n\t\t\t\t\t\t<SubMenu key=\"sub_route\" title=\"路线\" icon={<DownOutlined />}>\r\n\t\t\t\t\t\t\t<Menu.Item key=\"route\">\r\n\t\t\t\t\t\t\t\t线路数:\r\n\t\t\t\t\t\t\t\t<InputNumber min={2} defaultValue={2} onChange={onChangeInput}/>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t</InspectorDIV>\r\n\r\n\t);\r\n}\r\n\r\n// get current state from store\r\nfunction getCurrentState(state, ownProps) {\r\n\t// console.log(state, ownProps);\r\n\treturn {state};\r\n}\r\n\r\n// get state from store, then give to Inspector component\r\nexport default connect(getCurrentState)(Inspector);\r\n\r\n\r\n//============= Styled Components ===============\r\nconst InspectorDIV = styled.div`\r\n\twidth: 400px;\r\n\theight: 700px;\r\n\tborder: 1px solid lightgrey;\r\n`;\r\n\r\nconst Header = styled.div`\r\n\theight: 45px;\r\n\tpadding: 10px 20px;\r\n\tborder-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst FORM = styled(Form)`\r\n\tpadding: 4px 16px;\r\n\tbackground: white;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport default function Polygon({fillColor, strokeColor, strokeWidth, children}) {\r\n\treturn (\r\n\t\t<PolygonBox>\r\n\t\t\t<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 111 44\">\r\n\t\t\t\t<g transform=\"matrix(1,0,0,1,-386.202,-492.831)\">\r\n\t\t\t\t\t<g transform=\"matrix(1,0,0,1.07965,3.97193,-33.3985)\">\r\n\t\t\t\t\t\t<path d=\"M402.079,526.733L383.272,507.553L402.079,488.373L472.937,488.373L491.744,507.553L472.937,526.733L402.079,526.733Z\" style={{fill: fillColor, stroke:strokeColor, strokeWidth:strokeWidth}}/>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t\t<PolygonTitle>{children}</PolygonTitle>\r\n\t\t</PolygonBox>\r\n\t);\r\n}\r\n\r\n//========== Styled Components ==========\r\nconst PolygonBox = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nconst PolygonTitle = styled.span`\r\n\tposition: absolute;\r\n`;\r\n","import EditableNode from \"./EditableNode\";\r\nimport Polygon from \"./Polygon\";\r\n\r\nexport class PolygonStartNode {\r\n\tconstructor(emptyNode, onDelete) {\r\n\t\tconst {x, y} = emptyNode.position();\r\n\t\tconst {width} = emptyNode.size();\r\n\r\n\t\tthis.width = 210;\r\n\t\tthis.height = 50;\r\n\t\tthis.x = x + (width - this.width)/2;\r\n\t\tthis.y = y;\r\n\t\tthis.shape = 'react-shape';\r\n\t\tthis.id = \"polygonStartNode\";\r\n\t\tthis.component = (node) => (\r\n\t\t\t<EditableNode onDelete={() => onDelete(node)}>\r\n\t\t\t\t<Polygon fillColor={\"none\"} strokeColor={\"#1890FF\"} strokeWidth={\"1px\"}>并行开始</Polygon>\r\n\t\t\t</EditableNode>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class PolygonFinishNode {\r\n\tconstructor(emptyNode) {\r\n\t\tconst {x, y} = emptyNode.position();\r\n\t\tconst {width} = emptyNode.size();\r\n\r\n\t\tthis.width = 210;\r\n\t\tthis.height = 50;\r\n\t\tthis.x = x + (width - this.width)/2;\r\n\t\tthis.y = y + 270;\r\n\t\tthis.shape = 'react-shape';\r\n\t\tthis.id = \"polygonFinishNode\";\r\n\t\tthis.component = <Polygon fillColor={\"none\"} strokeColor={\"#1890FF\"} strokeWidth={\"1px\"}>并行结束</Polygon>\r\n\t}\r\n}","import styled from 'styled-components';\r\nimport EditableNode from './EditableNode';\r\n\r\nexport default class ServiceNode {\r\n  constructor(emptyNode, title, onDelete) {\r\n    const {x, y} = emptyNode.position();\r\n    const {width} = emptyNode.size();\r\n\r\n    this.shape = \"react-shape\";\r\n    this.width = 220;\r\n    this.height = 35;\r\n    this.x = x + (width - this.width)/2;\r\n    this.y = y;\r\n    this.id = `${emptyNode.id}_Service`;\r\n    this.component = (node) => (\r\n      <EditableNode onDelete={() => onDelete(node)}>\r\n        <SNode>{title}</SNode>\r\n      </EditableNode> \r\n    )\r\n }\r\n}\r\n\r\n//=========== Styled Components ==============\r\nconst SNode = styled.div`\r\n  width: 170px;\r\n  height: 35px;\r\n  background: white;\r\n  border: 1px solid #1890FF;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n`;","import store from \"../Redux/reducer\";\r\nimport { EmptyNode, EmptyParallelNode } from \"../View/Graph/EmptyNode\";\r\nimport { PolygonFinishNode, PolygonStartNode } from \"../View/Graph/PolygonNode\";\r\nimport ServiceNode from '../View/Graph/ServiceNode';\r\nimport { Modal } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass Interaction {\r\n\tconstructor() {\r\n\t\t// create container node, 用来一次性 delete 整个 parallel node 树\r\n\t\tthis.containerNode = null;\r\n\t}\r\n\r\n\t// 只是检查 true or false 能不能放node\r\n\tvalidateNode(droppingNode, options, graph) {\r\n\t\tthis.graph = graph;\r\n\r\n\t\t// find empty node\r\n\t\tfor(let node of graph.getNodes()) {\r\n\t\t\tif(node.id === 'empty') {\r\n\t\t\t\tconst emptyBBox = node.getBBox();\r\n\t\t\t\tconst dropBBox = droppingNode.getBBox();\r\n\r\n\t\t\t\t// 判断交叉，有没有child\r\n\t\t\t\tif(dropBBox.isIntersectWithRect(emptyBBox) && node.getChildCount() === 0) {\r\n\t\t\t\t\t// get title and group of dropping node\r\n\t\t\t\t\tconst {title, group} = droppingNode.getData();\r\n\r\n\t\t\t\t\t// 判断 relation or service node\r\n\t\t\t\t\tif(group === \"service\") {\r\n\t\t\t\t\t\tthis.addServiceNode(node, title);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(group === \"relation\") {\r\n\t\t\t\t\t\tthis.addParallelNode(node);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// remove empty node\r\n\t\t\t\t\tgraph.removeNode(node);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(node.id.includes('emptyParallel_')) {\r\n\t\t\t\tconst emptyBBox = node.getBBox();\r\n\t\t\t\tconst dropBBox = droppingNode.getBBox();\r\n\r\n\t\t\t\t// 判断交叉，有没有child\r\n\t\t\t\tif(dropBBox.isIntersectWithRect(emptyBBox) && node.getChildCount() === 0) {\r\n\t\t\t\t\t// get title and group of dropping node\r\n\t\t\t\t\tconst {title, group} = droppingNode.getData();\r\n\r\n\t\t\t\t\t// 判断 relation or service node\r\n\t\t\t\t\tif(group === \"service\") {\r\n\t\t\t\t\t\tthis.addServiceNode(node, title);\r\n\t\t\t\t\t\t// remove empty node\r\n\t\t\t\t\t\tgraph.removeNode(node);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(group === \"relation\") {\r\n\t\t\t\t\t\talert('Only Service Node is available at here.')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddServiceNode(oldNode, title) {\r\n\t\tconst serviceNodeSetting = new ServiceNode(oldNode, title, \r\n\t\t\t(currNode) => {\r\n\t\t\t\tconfirm({\r\n\t\t\t\t\ticon: <ExclamationCircleOutlined/>,\r\n\t\t\t\t\ttitle: \"提示\",\r\n\t\t\t\t\tcontent: \"您确定要删除该节点吗？\",\r\n\t\t\t\t\tonOk: () => {\r\n\t\t\t\t\t\tthis.deleteServiceNode(currNode);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonCancel: () => {}\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\tconst serviceNode = this.graph.addNode(serviceNodeSetting);\r\n\r\n\t\t// 根据 oldNode 拿到他的 edges\r\n\t\tconst incomingEdge = this.graph.getIncomingEdges(oldNode)[0];\r\n\t\tconst outgoingEdge = this.graph.getOutgoingEdges(oldNode)[0];\r\n\r\n\t\t// get in and out edge of empty node, then reconnect with new polygon node\r\n\t\tincomingEdge.setTarget(serviceNode);\r\n\t\toutgoingEdge.setSource(serviceNode);\r\n\r\n\t\t// trigger AddParallelService event, and pass serviceNode\r\n\t\tif(oldNode.id !== 'empty') {\r\n\t\t\tthis.graph.trigger('AddParallelService', serviceNode);\r\n\r\n\t\t\t// close relation setting panel\r\n\t\t\tstore.dispatch({type: \"SET_RELATION\", payload: false});\r\n\t\t}\r\n\r\n\t\t// remove empty node\r\n\t\tthis.graph.removeNode('empty');\r\n\t}\r\n\r\n\taddParallelNode(oldNode) {\r\n\t\t// open relation setting panel\r\n\t\tstore.dispatch({type: \"SET_RELATION\", payload: true});\r\n\r\n\t\t// container node is invisible\r\n\t\tthis.containerNode = this.graph.addNode({\r\n\t\t\tid: 'container_node',\r\n\t\t\t// width: 100, height: 100\r\n\t\t});\r\n\r\n\t\t// 创建新的 poly instances，根据 oldNode 剧中他们\r\n\t\tconst startInstance = new PolygonStartNode(oldNode, \r\n\t\t\t(startNode) => {\r\n\t\t\t\tconfirm({\r\n\t\t\t\t\ticon: <ExclamationCircleOutlined/>,\r\n\t\t\t\t\ttitle: \"提示\",\r\n\t\t\t\t\tcontent: \"删除节点时，将同时删除其他节点中的相关数据关系！是否确认删除？\",\r\n\t\t\t\t\tonOk: () => {\r\n\t\t\t\t\t\tthis.deleteParalleleNode(startNode, finishNode)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonCancel: () => {}\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\tconst finishInstance = new PolygonFinishNode(oldNode);\r\n\r\n\t\t// add start, finish nodes\r\n\t\tconst startNode = this.graph.addNode(startInstance);\r\n\t\tconst finishNode = this.graph.addNode(finishInstance);\r\n\r\n\t\t// ================== default parallel nodes, edges ================\r\n\t\tlet routeNum = 2; //default number of router\r\n\t\tlet parallelNodes = [];\r\n\t\tlet parallelUpEdges = [];\r\n\t\tlet parallelDownEdges = [];\r\n\t\t// default setting of parallel edges  \r\n\t\tconst edgeSetting = {\r\n\t\t\trouter: 'orth',\r\n\t\t\tattrs: {\r\n\t\t\t\tline: {\r\n\t\t\t\t\tstroke: \"#1890FF\",\r\n\t\t\t\t\tsourceMarker: \"circle\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(let i = 0; i < 2; i++) {\r\n\t\t\t// nodes\r\n\t\t\tparallelNodes.push(this.graph.addNode(new EmptyParallelNode(120 + 260*i, `emptyParallel_${i}`)));\r\n\t\t\t// edges\r\n\t\t\tparallelUpEdges.push(this.graph.addEdge({\r\n\t\t\t\t...edgeSetting,\r\n\t\t\t\tid: `upEdge_${i}`,\r\n\t\t\t\tsource: startNode,\r\n\t\t\t\ttarget: parallelNodes[i],\r\n\t\t\t\tvertices: [{x: 245 + 260*i, y: 220}]\r\n\t\t\t}));\r\n\r\n\t\t\tparallelDownEdges.push(this.graph.addEdge({\r\n\t\t\t\t...edgeSetting,\r\n\t\t\t\tid: `downEdge_${i}`,\r\n\t\t\t\tsource: parallelNodes[i],\r\n\t\t\t\ttarget: finishNode,\r\n\t\t\t\tvertices: [{x: 310 + 130*i, y: 350}]\r\n\r\n\t\t\t}))\r\n\r\n\t\t\t// add to containerNode\r\n\t\t\tthis.containerNode.addChild(parallelNodes[i]);\r\n\t\t\tthis.containerNode.addChild(parallelUpEdges[i]);\r\n\t\t\tthis.containerNode.addChild(parallelDownEdges[i]);\r\n\t\t}\r\n\r\n\t\t// ===================== change on parallel nodes, edges ===========================\r\n\t\tconst onChangeRouteNum = () => {\r\n\t\t\t// get routeNum from redux store\r\n\t\t\trouteNum = store.getState().routeNum;\r\n\t\t\tconst index = routeNum - 1;\r\n\t\t\tconst action = store.getState().action;\r\n\r\n\t\t\tif(action === \"plus\") {\r\n\t\t\t\t// translate previous nodes, vertices\r\n\t\t\t\tfor(let i = 0; i < index; i++) {\r\n\t\t\t\t\tparallelNodes[i].translate(-130, undefined);\r\n\t\t\t\t\t// translate vertices\r\n\t\t\t\t\tconst {x:up_x} = parallelUpEdges[i].getVertices()[0];\r\n\t\t\t\t\tconst {x:down_x} = parallelDownEdges[i].getVertices()[0];\r\n\t\t\t\t\tparallelUpEdges[i].setVertices([{x: up_x - 130, y: 220}]);\r\n\t\t\t\t\tparallelDownEdges[i].setVertices([{x: down_x - 65, y: 350}]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add new node, edges\r\n\t\t\t\tparallelNodes.push(this.graph.addNode(new EmptyParallelNode(120 + 260*index - (routeNum-2)*130, `emptyParallel_${index}`)));\r\n\t\t\t\t\r\n\t\t\t\tparallelUpEdges.push(this.graph.addEdge({\r\n\t\t\t\t\t...edgeSetting,\r\n\t\t\t\t\tid: `upEdge_${index}`,\r\n\t\t\t\t\tsource: startNode,\r\n\t\t\t\t\ttarget: parallelNodes[index],\r\n\t\t\t\t\tvertices: [{x: 245 + 260*index-(routeNum-2)*130, y: 220}]\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tparallelDownEdges.push(this.graph.addEdge({\r\n\t\t\t\t\t...edgeSetting,\r\n\t\t\t\t\tid: `downEdge_${index}`,\r\n\t\t\t\t\tsource: parallelNodes[index],\r\n\t\t\t\t\ttarget: finishNode,\r\n\t\t\t\t\tvertices: [{x: 310 + 130*index-(routeNum-2)*65, y: 350}]\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t// addChild to containerNode\r\n\t\t\t\tthis.containerNode.addChild(parallelNodes[index]);\r\n\t\t\t\tthis.containerNode.addChild(parallelUpEdges[index]);\r\n\t\t\t\tthis.containerNode.addChild(parallelDownEdges[index]);\r\n\t\t\t}\r\n\t\t\telse if(action === \"minus\") {\r\n\t\t\t\t// translate previous nodes\r\n\t\t\t\tfor(let i = 0; i < routeNum; i++) {\r\n\t\t\t\t\tparallelNodes[i].translate(130, undefined);\r\n\t\t\t\t\t// translate vertices\r\n\t\t\t\t\tconst {x:up_x} = parallelUpEdges[i].getVertices()[0];\r\n\t\t\t\t\tconst {x:down_x} = parallelDownEdges[i].getVertices()[0];\r\n\t\t\t\t\tparallelUpEdges[i].setVertices([{x: up_x + 130, y: 220}]);\r\n\t\t\t\t\tparallelDownEdges[i].setVertices([{x: down_x + 65, y: 350}]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// pop nodes, edges\r\n\t\t\t\tparallelNodes.pop();\r\n\t\t\t\tparallelUpEdges.pop();\r\n\t\t\t\tparallelDownEdges.pop();\r\n\t\t\t\t// remove node\r\n\t\t\t\tthis.graph.removeNode(`emptyParallel_${routeNum}`);\r\n\t\t\t}\r\n\t\t\telse if(action === 'reset') {\r\n\t\t\t\t// return to default parallel tree\r\n\t\t\t\tparallelNodes = parallelNodes.slice(0, 2);\r\n\t\t\t\tparallelUpEdges = parallelUpEdges.slice(0, 2);\r\n\t\t\t\tparallelDownEdges = parallelDownEdges.slice(0, 2);\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(routeNum);\r\n\t\t\t// console.log(parallelNodes);\r\n\t\t\t// console.log(parallelUpEdges);\r\n\t\t\t// console.log(parallelDownEdges);\r\n\t\t\t// console.log(this.graph.getNodes());\r\n\t\t\t// console.log(this.graph.getEdges());\r\n\t\t}\r\n\t\tstore.subscribe(onChangeRouteNum);\r\n\r\n\t\t// 根据 oldNode 拿到他的 edges\r\n\t\tconst incomingEdge = this.graph.getIncomingEdges(oldNode)[0];\r\n\t\tconst outgoingEdge = this.graph.getOutgoingEdges(oldNode)[0];\r\n\r\n\t\t// get in and out edge of empty node, then reconnect with start, finish nodes\r\n\t\tincomingEdge.setTarget(startNode);\r\n\t\toutgoingEdge.setSource(finishNode);\r\n\r\n\t\t// add start, finish nodes to containerNode\r\n\t\tthis.containerNode.addChild(startNode);\r\n\t\tthis.containerNode.addChild(finishNode);\r\n\r\n\t\t// listen AddParallelService, and add serviceNode to containerNode\r\n\t\tthis.graph.on(\"AddParallelService\", (serviceNode) => {\r\n\t\t\tthis.containerNode.addChild(serviceNode);\r\n\t\t})\r\n\r\n\t\t// trigger of add parallel node event \r\n\t\tthis.graph.trigger(\"AddParallel\");\r\n\r\n\t\t// remove empty node\r\n\t\tthis.graph.removeNode('empty');\r\n\t}\r\n\r\n\tdeleteServiceNode(serviceNode) {\r\n\t\tconst {x} = serviceNode.position();\r\n\t\tconst id = serviceNode.id;\r\n\t\tlet newEmptyNode = null;\r\n\r\n\t\t// add new empty node\r\n\t\tif(id === 'empty_Service') {\r\n\t\t\tnewEmptyNode = this.graph.addNode(new EmptyNode());\r\n\t\t}\r\n\t\t// add new empty parallel node\r\n\t\telse if(id.includes('emptyParallel_')) {\r\n\t\t\tconst i = id.slice(14, 15);\r\n\t\t\t// newEmptyNode = this.graph.addNode(new EmptyParallelNode(120 + 260*i, `emptyParallel_${i}`));\r\n\t\t\tnewEmptyNode = this.graph.addNode(new EmptyParallelNode(x-15, `emptyParallel_${i}`));\r\n\t\t\t\r\n\t\t\t// add new emptyNode to containerNode\r\n\t\t\tthis.containerNode.addChild(newEmptyNode);\r\n\t\t}\r\n\r\n\t\t// get in, out edges of service node, then reconnect with newEmptyNode\r\n\t\tthis.graph.getIncomingEdges(serviceNode)[0].setTarget(newEmptyNode);\r\n\t\tthis.graph.getOutgoingEdges(serviceNode)[0].setSource(newEmptyNode);\r\n\r\n\t\t// delete service node\r\n\t\tthis.graph.removeNode(serviceNode);\r\n\t}\r\n\r\n\tdeleteParalleleNode(startNode, finishNode) {\r\n\t\t// reset routeNum\r\n\t\tstore.dispatch({type: \"RESET\"});\r\n\t\t// close relation setting panel\r\n\t\tstore.dispatch({type: \"SET_RELATION\", payload: false});\r\n\r\n\t\t// add new emptyNode\r\n\t\tconst newEmptyNode = this.graph.addNode(new EmptyNode());\r\n\r\n\t\t// get in, out edges of polygonStart, finish node, then reconnect with newEmptyNode\r\n\t\tthis.graph.getIncomingEdges(startNode)[0].setTarget(newEmptyNode);\r\n\t\tthis.graph.getOutgoingEdges(finishNode)[0].setSource(newEmptyNode);\r\n\r\n\t\t// delete containerNode\r\n\t\tthis.graph.removeNode(this.containerNode);\r\n\r\n\t\t// trigger of delete parallel node event\r\n\t\tthis.graph.trigger(\"DeleteParallel\");\r\n\t}\r\n}\r\n\r\nconst interaction = new Interaction();\r\nexport default interaction;","import { ReactShape } from \"@antv/x6-react-shape\";\r\n\r\nexport default class StencilGroup_base {\r\n  constructor() {\r\n    this.titles = [];\r\n    this.groupName = \"\";\r\n    this.Component = <></>;\r\n  }\r\n\r\n  // create different nodes by title\r\n  init(group) {\r\n    this.nodes = [];\r\n    for (let i = 0; i < this.titles.length; i++) {\r\n      const title = this.titles[i];\r\n      const node = new ReactShape({\r\n        width: 170,\r\n        height: 35,\r\n        data: {title, group},\r\n        shape: \"react-shape\", //*  !!!!  *//\r\n        component: <this.Component>{title}</this.Component>\r\n      });\r\n      this.nodes.push(node);\r\n    }\r\n  }\r\n\r\n  // 模板节点添加到指定的群组中\r\n  load(stencil) {\r\n    stencil.load(this.nodes, this.groupName);\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport StencilGroup_base from \"./StencilGroup_base\";\r\n\r\nexport default class StencilGroup_relation extends StencilGroup_base {\r\n  constructor(relations) {\r\n    super();\r\n    this.titles = relations;\r\n    this.groupName = \"关系节点\";\r\n    this.Component = RelationNode;\r\n    this.init(\"relation\");\r\n  }\r\n}\r\n\r\n//========= Styled Component ============\r\nconst RelationNode = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border: 2px dashed lightgrey;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport StencilGroup_base from \"./StencilGroup_base\";\r\n\r\nexport default class StencilGroup_service extends StencilGroup_base {\r\n  constructor(services) {\r\n    super();\r\n    this.titles = services;\r\n    this.groupName = \"讯飞服务\";\r\n    this.Component = ServiceNode;\r\n    this.init(\"service\");\r\n  }\r\n}\r\n\r\n//========= Styled Component ===========\r\nconst ServiceNode = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: white;\r\n  border: 1px solid lightgrey;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n`;\r\n","import { Addon } from \"@antv/x6\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport interaction from \"../../Interaction/Interaction\";\r\nimport StencilGroup_relation from \"./Group/StencilGroup_relation\";\r\nimport StencilGroup_service from \"./Group/StencilGroup_service\";\r\n\r\nexport default function StencilComp({ graphRef, stencilRef, relations, services }) {\r\n  const container = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if(!graphRef.current) {\r\n      return;\r\n    }\r\n    // create stencil instance\r\n    const stencil = new Addon.Stencil({\r\n      title: \"Components\",\r\n      target: graphRef.current,\r\n      search(cell, keyword) {\r\n        return cell.shape.indexOf(keyword) !== -1;\r\n      },\r\n      placeholder: \"全部服务/节点\",\r\n      notFoundText: \"Not Found\",\r\n      collapsable: true,\r\n      stencilGraphWidth: 230,\r\n      stencilGraphHeight: 100,\r\n      layoutOptions: {\r\n        columns: 1,\r\n        dx: 0,\r\n        dy: 0,\r\n        center: true,\r\n        columnWidth: 200,\r\n        rowHeight: 50\r\n      },\r\n      stencilGraphOptions: {\r\n        background: {color: '#ffffff',}\r\n      },\r\n      groups: [\r\n        {\r\n          name: \"关系节点\",\r\n          title: \"关系节点\"\r\n        },\r\n        {\r\n          name: \"讯飞服务\",\r\n          title: \"讯飞服务\",\r\n          graphHeight: 300\r\n        }\r\n      ],\r\n      validateNode: (droppingNode, options) => interaction.validateNode(droppingNode, options, graphRef.current)\r\n    });\r\n\r\n    stencilRef.current = stencil;\r\n    container.current.appendChild(stencil.container);\r\n\r\n    // add service, relation group to stencil\r\n    const serviceGroup = new StencilGroup_service(services);\r\n    serviceGroup.load(stencil);\r\n\r\n    const relationGroup = new StencilGroup_relation(relations);\r\n    relationGroup.load(stencil);\r\n  }, []);\r\n\r\n  return <StencilContainer ref={container}></StencilContainer>;\r\n}\r\n\r\n//============ styled components ==============\r\nconst StencilContainer = styled.div`\r\n  width: 230px;\r\n  border: 1px solid #f0f0f0;\r\n  position: relative; /* !!! */\r\n`;\r\n","import { usePortal } from \"@antv/x6-react-shape\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport GraphComp from \"./View/Graph/GraphComp\";\r\nimport GraphInitialize from \"./View/Graph/GraphInitialize\";\r\nimport Inspector from \"./View/Inspector/Inspector\";\r\nimport StencilComp from \"./View/Stencil/StencilComp\";\r\n\r\nconst GRAPH_1 = \"GRAPH_1\";\r\n\r\nexport default function GraphEditor({relations, services}) {\r\n  const [Portal, setPortalGraph] = usePortal(GRAPH_1);\r\n  const graphRef = useRef(null);\r\n  const stencilRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    GraphInitialize(graphRef.current);\r\n    setPortalGraph(graphRef.current);\r\n  }, [Portal]);\r\n\r\n  return (\r\n    <DIV>\r\n      <GlobalStyle />\r\n      <Inspector />\r\n      <GraphComp graphRef={graphRef} />\r\n      <StencilComp graphRef={graphRef} stencilRef={stencilRef} relations={relations} services={services} />\r\n    </DIV>\r\n  );\r\n}\r\n\r\n//============ styled components ==============\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst DIV = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: row-reverse;\r\n  width: 100%;\r\n`;","import GraphEditor from \"./GraphEditor\";\r\n\r\nexport default function App() {\r\n  return <GraphEditor \r\n    relations={[\"并行节点\", \"条件节点\"]} \r\n    services={[\"人脸相关能力\", \"text_lang\", \"文本校对\", \"IFOCR\", \"测试自定义用例\"]} \r\n  />\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './Redux/reducer';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n\t,document.getElementById('root')\r\n);"],"sourceRoot":""}